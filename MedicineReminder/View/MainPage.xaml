<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="MedicineReminder.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MedicineReminder"
    xmlns:vm="using:MedicineReminder.ViewModel"
    xmlns:common="using:MedicineReminder.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    d:DataContext="{Binding Source={d:DesignInstance Type=vm:RemindersViewModel, IsDesignTimeCreatable=True}}">

    <common:LayoutAwarePage.Resources>

        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
    		x:Name="RemindersViewSource"
    		Source="{Binding ReminderGroups}"
    		IsSourceGrouped="true"
    		ItemsPath="Reminders"
            d:Source="{Binding ReminderGroups, Source={d:DesignInstance Type=vm:RemindersViewModel, IsDesignTimeCreatable=True}}"/>

        <CollectionViewSource
    		x:Name="PatientsViewSource"
    		Source="{Binding PatientGroups}"
    		IsSourceGrouped="true"
    		ItemsPath="Reminders"
            d:Source="{Binding PatientGroups, Source={d:DesignInstance Type=vm:RemindersViewModel, IsDesignTimeCreatable=True}}"/>


    </common:LayoutAwarePage.Resources>

    <!-- Application Bar -->
    <Page.BottomAppBar>
        <AppBar x:Name="bottomAppBar" Padding="10,0,10,0">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="RefreshButton" Style="{StaticResource RefreshAppBarButtonStyle}" AutomationProperties.Name="Refresh" Command="{Binding RefreshCommand}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button x:Name="EditButton" Style="{StaticResource EditAppBarButtonStyle}" Click="EditButton_Click"/>
                    <Button x:Name="DeleteButton" Style="{StaticResource DiscardAppBarButtonStyle}" AutomationProperties.Name="Delete" Command="{Binding DeleteCommand}"/>
                    <Button x:Name="AddButton" Style="{StaticResource AddAppBarButtonStyle}" AutomationProperties.Name="Add Reminder" Command="{Binding AddCommand}"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>


    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the view selection between Due Time & Patients
        * Row 2 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Style="{StaticResource HeaderGridStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" x:Uid="/Resources/AppName" Text="{StaticResource AppName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}" HorizontalAlignment="Left"/>
        </Grid>

        <!-- Selection between Due Time view and Patient view -->
        <StackPanel x:Name="displayBy" Grid.Row="1" Orientation="Horizontal" Margin="108,0,0,0">
            <RadioButton x:Name="DueTimeView" Style="{StaticResource SelectionButtonStyle}" Content="Due Time" x:Uid="/Resources/DueTime" IsChecked="{Binding DisplayByPatients, Converter={StaticResource BooleanNegationConverter}}" Click="DisplayByButtonClicked"/>
            <Border Height="30" Margin="6,0,6,0" Width="2" Background="White"/>
            <RadioButton x:Name="PatientsView" Style="{StaticResource SelectionButtonStyle}" Content="Patients" x:Uid="/Resources/Patients" IsChecked="{Binding DisplayByPatients}" Click="DisplayByButtonClicked"/>
        </StackPanel>

        <!-- Horizontal scrolling grid used in most view states -->
        <Grid x:Name="fullView" Grid.Row="2">
            <SemanticZoom x:Name="duetimeGridView" Visibility="{Binding IsChecked, ElementName=DueTimeView, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <SemanticZoom.ZoomedOutView>
                    <GridView x:Name="duetimeZoomedOutGridView"
                        Padding="116,20,40,46"
				        AutomationProperties.AutomationId="ItemGridView"
				        AutomationProperties.Name="Grouped Items"
				        ItemsSource="{Binding Source={StaticResource PatientsViewSource}}"
				        SelectionMode="None"
				        IsSwipeEnabled="True"
				        IsItemClickEnabled="True">
                        
                        <GridView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="300">
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Group.Title}" VerticalAlignment="Top" Style="{StaticResource SubheaderTextStyle}" Margin="15,0,15,10" HorizontalAlignment="Left"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Text="{Binding Group.Total}" Style="{StaticResource SubheaderTextStyle}" Margin="5,0,15,15" TextWrapping="NoWrap" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>

                </SemanticZoom.ZoomedOutView>
                <SemanticZoom.ZoomedInView>
                    
                    <GridView x:Name="duetimeZoomedInGridView"
                        Padding="116,20,40,46"
				        AutomationProperties.AutomationId="ItemGridView"
				        AutomationProperties.Name="Grouped Items"
				        ItemsSource="{Binding Source={StaticResource RemindersViewSource}}"
				        ItemTemplate="{StaticResource ReminderItemTemplate}"
				        SelectionMode="Single"
				        IsSwipeEnabled="True"
				        IsItemClickEnabled="True"
				        ItemClick="ItemView_ItemClick"
				        SelectionChanged="itemGridView_SelectionChanged" >

                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="1,0,0,6">
                                            <Button
										    AutomationProperties.Name="Group Title"
										    Click="Header_Click"
										    Style="{StaticResource TextPrimaryButtonStyle}" >
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                    <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>
            </SemanticZoom>

            <SemanticZoom x:Name="patientsGridView" Visibility="{Binding IsChecked, ElementName=PatientsView, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <SemanticZoom.ZoomedOutView>
                    <GridView x:Name="patientsZoomeOutdGridView"
                        Padding="116,20,40,46"
				        AutomationProperties.AutomationId="ItemGridView"
				        AutomationProperties.Name="Grouped Items"
				        SelectionMode="None"
				        IsSwipeEnabled="True"
				        IsItemClickEnabled="True">

                        <GridView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="300">
                                    <TextBlock x:Name="Name" TextWrapping="Wrap" Text="{Binding Group.Title}" VerticalAlignment="Top" Style="{StaticResource SubheaderTextStyle}" Margin="15,0,15,10" HorizontalAlignment="Left"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Text="{Binding Group.Overdue}" Foreground="{StaticResource MedicineBrush}" Style="{StaticResource SubheaderTextStyle}" Margin="15,0,5,0" TextWrapping="NoWrap" />
                                        <TextBlock Text="/" Style="{StaticResource SubheaderTextStyle}" TextWrapping="NoWrap" />
                                        <TextBlock Text="{Binding Group.Total}" Style="{StaticResource SubheaderTextStyle}" Margin="5,0,15,15" TextWrapping="NoWrap" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>

                </SemanticZoom.ZoomedOutView>
                <SemanticZoom.ZoomedInView>
                    <GridView x:Name="patientsZoomedInGridView"
                        Padding="116,20,40,46"
				        AutomationProperties.AutomationId="ItemGridView"
				        AutomationProperties.Name="Grouped Items"
				        ItemsSource="{Binding Source={StaticResource PatientsViewSource}}"
				        ItemTemplate="{StaticResource ReminderItemTemplate}"
				        SelectionMode="Single"
				        IsSwipeEnabled="True"
				        IsItemClickEnabled="True"
				        ItemClick="ItemView_ItemClick"
				        SelectionChanged="itemGridView_SelectionChanged">

                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>
                        <GridView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="1,0,0,6">
                                            <Button
										    AutomationProperties.Name="Group Title"
										    Click="Header_Click"
										    Style="{StaticResource TextPrimaryButtonStyle}" >
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                    <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                                <GroupStyle.Panel>
                                    <ItemsPanelTemplate>
                                        <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                    </ItemsPanelTemplate>
                                </GroupStyle.Panel>
                            </GroupStyle>
                        </GridView.GroupStyle>
                    </GridView>
                </SemanticZoom.ZoomedInView>
            </SemanticZoom>
        </Grid>


        <!-- Vertical scrolling list only used when snapped -->
        <Grid x:Name="snappedView" Grid.Row="2" Visibility="Collapsed">

            <SemanticZoom x:Name="duetimeListView" Visibility="{Binding IsChecked, ElementName=DueTimeView, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <SemanticZoom.ZoomedOutView>
                    <ListView x:Name="duetimeZoomedOutListView"
			            AutomationProperties.AutomationId="medicineListView"
			            AutomationProperties.Name="Grouped Items"
			            Visibility="{Binding IsChecked, ElementName=DueTimeView, Converter={StaticResource BooleanToVisibilityConverter}}"
			            Padding="10,20,0,60"
			            ItemsSource="{Binding Source={StaticResource RemindersViewSource}}"
                        ItemClick="ItemView_ItemClick" ItemTemplate="{StaticResource SnappedDueTimeItemTemplate}"
			            SelectionMode="Single"
			            IsSwipeEnabled="True"
			            IsItemClickEnabled="True"/>

                </SemanticZoom.ZoomedOutView>
                <SemanticZoom.ZoomedInView>
                    <ListView x:Name="duetimeZoomedInListView"
			            AutomationProperties.AutomationId="medicineListView"
			            AutomationProperties.Name="Grouped Items"
			            Visibility="{Binding IsChecked, ElementName=DueTimeView, Converter={StaticResource BooleanToVisibilityConverter}}"
			            Padding="10,20,0,60"
			            ItemsSource="{Binding Source={StaticResource RemindersViewSource}}"
			            ItemTemplate="{StaticResource SnappedReminderItemTemplate}"
			            SelectionMode="Single"
			            IsSwipeEnabled="True"
			            IsItemClickEnabled="True"
			            ItemClick="ItemView_ItemClick"
                        SelectionChanged="itemGridView_SelectionChanged">
                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="7,21,0,0">
                                            <Button
									    AutomationProperties.Name="Group Title"
									    Click="Header_Click"
									    Style="{StaticResource TextPrimaryButtonStyle}">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                    <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
            </SemanticZoom>

            <SemanticZoom x:Name="patientsListView" Visibility="{Binding IsChecked, ElementName=PatientsView, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <SemanticZoom.ZoomedOutView>
                    <ListView x:Name="patientsZoomedOutListView"
			            AutomationProperties.AutomationId="medicineListView"
			            AutomationProperties.Name="Grouped Items"
			            Visibility="{Binding IsChecked, ElementName=PatientsView, Converter={StaticResource BooleanToVisibilityConverter}}"
			            Padding="10,20,0,60"
			            ItemsSource="{Binding Source={StaticResource PatientsViewSource}}"
			            SelectionMode="Single"
			            IsSwipeEnabled="True"
			            IsItemClickEnabled="True"
			            ItemClick="ItemView_ItemClick">

                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Background="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" Width="300">
                                    <TextBlock x:Name="Name" TextWrapping="Wrap" Text="{Binding Group.Title}" VerticalAlignment="Top" Style="{StaticResource SubheaderTextStyle}" Margin="15,0,15,10" HorizontalAlignment="Left"/>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                        <TextBlock Text="{Binding Group.Total}" Style="{StaticResource SubheaderTextStyle}" Margin="5,0,15,15" TextWrapping="NoWrap" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </SemanticZoom.ZoomedOutView>
                <SemanticZoom.ZoomedInView>
                    <ListView x:Name="patientsZoomedInListView"
			            AutomationProperties.AutomationId="medicineListView"
			            AutomationProperties.Name="Grouped Items"
			            Visibility="{Binding IsChecked, ElementName=PatientsView, Converter={StaticResource BooleanToVisibilityConverter}}"
			            Padding="10,20,0,60"
			            ItemsSource="{Binding Source={StaticResource PatientsViewSource}}"
			            ItemTemplate="{StaticResource SnappedReminderItemTemplate}"
			            SelectionMode="Single"
			            IsSwipeEnabled="True"
			            IsItemClickEnabled="True"
			            ItemClick="ItemView_ItemClick"
                        SelectionChanged="itemGridView_SelectionChanged">

                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid Margin="7,21,0,0">
                                            <Button
									        AutomationProperties.Name="Group Title"
									        Click="Header_Click"
									        Style="{StaticResource TextPrimaryButtonStyle}">
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                    <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListView.GroupStyle>
                    </ListView>
                </SemanticZoom.ZoomedInView>
            </SemanticZoom>

        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,20,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="displayBy" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="6,0,0,0"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="snappedView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="fullView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
